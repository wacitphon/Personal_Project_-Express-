// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model Profile_Img {
  id      Int    @id @default(autoincrement())
  url     String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  Int    @map("user_id")
}

model User {
  id          Int           @id @default(autoincrement())
  username    String        @db.VarChar(150) @unique
  password    String        @db.VarChar(75)
  email       String?     
  phon        String
  role        Role          @default(USER)
  repair      Repair[]
  profile_Img Profile_Img[]
  @@map("user")
}


model Repair {
  id         Int         @id @unique @default(autoincrement())
  detail     String
  requesDate DateTime    @map("due_date")
  equiment   String
  location   String
  status   String
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     Int         @map("user_id")
  repairedit RepairEdit[]
  technician Technician[]



    @@map("repair")
}




model Technician {
  id         Int    @id @default(autoincrement())
  name       String
  phon       String
  datedit   RepairEdit[]
  repair        Repair  @relation(fields: [repairId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  repairId      Int @map( "repair_id")
}

model RepairEdit {
  id            Int @id @default(autoincrement())
  Editdate      DateTime @default(now())
  Finishdate    DateTime @default(now())
  detail        String
  technician    Technician @relation(fields: [technicianId],references: [id],onDelete: Cascade,onUpdate: Cascade)
  technicianId  Int @map("technician_id")
  repair        Repair  @relation(fields: [repairId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  repairId      Int @map( "repair_id")
  
}

